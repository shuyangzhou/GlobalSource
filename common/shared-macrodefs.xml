<?xml version="1.0" encoding="UTF-8"?>

<project name="macro-definitions" default="default" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<property file="build-ext.properties" />
	<property file="build.properties" />

	<property name="module.list" value="" />
	<property name="test.list" value="" />

	<property environment="env" />

	<taskdef classpath="../common/lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml" />

	<macrodef name="append-list">
		<attribute name="list" />
		<attribute name="src.dir.name" />

		<sequential>
			<if>
				<equals arg1="${@{list}}" arg2="" />
				<then>
					<var name="@{list}" value="@{src.dir.name}" />
				</then>
				<else>
					<var name="@{list}" value="${@{list}},@{src.dir.name}" />
				</else>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="append-module">
		<attribute name="src.dir" />
		<attribute name="src.dir.name" />
		<attribute name="project.dir" />

		<sequential>
			<concat destfile="@{project.dir}/nbproject/project.properties" append="true">project.@{src.dir.name}=@{project.dir}/modules/@{src.dir.name}
reference.@{src.dir.name}.jar=$${project.@{src.dir.name}}/dist/@{src.dir.name}.jar
</concat>
			<append-list
				list="module.list"
				src.dir.name="${src.dir}"
			/>
		</sequential>
	</macrodef>

	<macrodef name="build-modules">
		<attribute name="portal.dir" />
		<attribute name="project.dir" />

		<sequential>
			<common-build
				portal.dir="@{portal.dir}"
				project.dir="@{project.dir}"
			>
				<build.diff>
					<append-module
						src.dir="${src.dir}"
						src.dir.name="${src.dir.name}"
						project.dir="@{project.dir}"
					/>

					<unzip src="CleanModule.zip" dest="@{project.dir}/modules/${src.dir.name}/" />
				</build.diff>
			</common-build>

			<for param="module">
				<path>
					<dirset dir="@{portal.dir}">
						<include name="**/src" />
						<exclude name="**/build/**" />
					</dirset>
				</path>

				<sequential>
					<var name="src.dir" unset="true" />
					<var name="src.dir.name" unset="true" />

					<set-module-source-directory module="@{module}" />

					<if>
						<and>
							<not>
								<contains string="${exclude.modules}" substring="${src.dir.name}" />
							</not>
							<or>
								<available file="${src.dir}/build.gradle" />
								<available file="${src.dir}/build.xml" />
								<available file="${src.dir}/web.xml" />
							</or>
						</and>
						<then>
							<java classname="com.liferay.netbeansproject.CreateModule" classpath="classes">
								<arg value="src.dir=${src.dir}" />
								<arg value="module.list=${module.list}" />
								<arg value="portal.dir=@{portal.dir}" />
								<arg value="project.dir=@{project.dir}" />
							</java>
						</then>
					</if>
				</sequential>
			</for>

			<delete dir="@{project.dir}/dependencies" />

			<java classname="com.liferay.netbeansproject.CreateProject" classpath="classes">
				<arg value="module.list=${module.list}" />
				<arg value="project.dir=@{project.dir}" />
				<arg value="umbrella.source.list=${umbrella.source.list}" />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="clean">
		<attribute name="project.dir" />
		<sequential>
			<delete dir="classes" />
			<delete dir="@{project.dir}" />
		</sequential>
	</macrodef>

	<macrodef name="common-build">
		<attribute name="project.dir" />
		<attribute name="portal.dir" />
		<element name="build.diff" />

		<sequential>
			<unzip src="CleanProject.zip" dest="@{project.dir}/" />

			<copy file="@{project.dir}/nbproject/default.properties" tofile="@{project.dir}/nbproject/project.properties" />

			<concat destfile="@{project.dir}/nbproject/project.properties" append="true">excludes=${exclude.types}
	</concat>

			<concat destfile="@{project.dir}/nbproject/project.properties" append="true">file.reference.portal-web.src=@{portal.dir}/portal-web/docroot
src.portal-web.dir=$${file.reference.portal-web.src}
file.reference.portal-web-functional.src=@{portal.dir}/portal-web/test/functional
src.portal-web-functional.dir=$${file.reference.portal-web-functional.src}
	</concat>

			<for param="module">
				<path>
					<dirset dir="@{portal.dir}">
						<include name="**/src"/>
						<exclude name="**/build/**" />
					</dirset>
				</path>

				<sequential>
					<var name="src.dir" unset="true" />
					<var name="src.dir.name" unset="true" />

					<set-module-source-directory module="@{module}" />

					<if>
						<and>
							<not>
								<contains string="${exclude.modules}" substring="${src.dir.name}" />
							</not>
							<or>
								<available file="${src.dir}/build.gradle" />
								<available file="${src.dir}/build.xml" />
								<available file="${src.dir}/web.xml" />
							</or>
						</and>
						<then>
							<build.diff />
						</then>
					</if>
				</sequential>
			</for>

			<java classname="com.liferay.netbeansproject.ProcessGradle" classpath="classes">
				<arg value="portal.dir=@{portal.dir}" />
				<arg value="project.dir=@{project.dir}" />
				<arg value="work.dir=@{portal.dir}/modules" />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="compile">
		<sequential>
			<mkdir dir="classes" />

			<javac
				debug="true"
				destdir="classes"
				includeantruntime="false" >

				<src path="../common/src" />
				<src path="src" />
			</javac>
		</sequential>
	</macrodef>

	<macrodef name="for-each-portal">
		<element name="steps" />
		<sequential>
			<for list="${portal.dirs}" param="portal.dir">
				<sequential>
					<local name="portal.name" />
					<basename property="portal.name" file="@{portal.dir}" />

					<steps />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<macrodef name="set-module-source-directory">
		<attribute name="module" />

		<sequential>
			<dirname property="src.dir" file="@{module}" />

			<basename property="src.dir.name" file="${src.dir}" />

			<if>
				<equals arg1="${src.dir.name}" arg2="WEB-INF" />
				<then>
					<dirname property="temp" file="${src.dir}" />

					<var name="src.dir" unset="true" />

					<dirname property="src.dir" file="${temp}" />

					<var name="temp" unset="true" />
					<var name="src.dir.name" unset="true" />

					<basename property="src.dir.name" file="${src.dir}" />
				</then>
			</if>
		</sequential>
	</macrodef>
</project>